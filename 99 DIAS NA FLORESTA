-- Carrega Rayfield
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

-- Janela Principal
local Janela = Rayfield:CreateWindow({
    Name = "99 DIAS NA FLORESTA",
    LoadingTitle = "Carregando...",
    LoadingSubtitle = "By EXPLOIT404",
    ConfigurationSaving = { Enabled = true, FolderName = "PainelSynk", FileName = "painel_config" },
    Theme = "Amethyst"
})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local killAuraAtivo = false
local killAuraConnection = nil
local distanciaKillAura = 50
local prefixoCodigo = "2_"
local codigoNumero = 429
local ferramentasKillAura = {"Old Axe","Spear","Ice Axe"}
local teleportandoItem = false

-- Fun√ß√£o Kill Aura
local function ativarKillAura()
    killAuraConnection = RunService.Heartbeat:Connect(function()
        if not killAuraAtivo then return end

        local rootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if not rootPart then return end

        local charactersFolder = workspace:FindFirstChild("Characters") or workspace
        local ferramentas = {}
        local inventory = LocalPlayer:FindFirstChild("Inventory")
        if inventory then
            for _, nome in pairs(ferramentasKillAura) do
                local tool = inventory:FindFirstChild(nome)
                if tool then table.insert(ferramentas, tool) end
            end
        end
        if #ferramentas == 0 then return end

        for _, npc in pairs(charactersFolder:GetChildren()) do
            if npc:IsA("Model") and npc ~= LocalPlayer.Character then
                local targetPart = npc.PrimaryPart or npc:FindFirstChild("HumanoidRootPart") or npc:FindFirstChildWhichIsA("BasePart")
                if targetPart and (targetPart.Position - rootPart.Position).Magnitude <= distanciaKillAura then
                    for _, tool in pairs(ferramentas) do
                        local codigoAtual = prefixoCodigo .. codigoNumero
                        local args = {npc, tool, codigoAtual, targetPart.CFrame}
                        spawn(function()
                            pcall(function()
                                ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("ToolDamageObject"):InvokeServer(unpack(args))
                            end)
                        end)
                    end
                end
            end
        end
    end)
end

local function desativarKillAura()
    if killAuraConnection then
        killAuraConnection:Disconnect()
        killAuraConnection = nil
    end
end

-- Fun√ß√£o de teleporte inteligente para coletar Coal
local function teleportarParaItem(itemNome, quantidade)
    for i=1,quantidade do
        if teleportandoItem then 
            Rayfield:Notify({Title = "‚ö†Ô∏è Aguarde", Content = "J√° estou coletando um item!", Duration = 2})
            return 
        end
        
        teleportandoItem = true
        local char = LocalPlayer.Character
        local rootPart = char and char:FindFirstChild("HumanoidRootPart")
        if not rootPart then
            Rayfield:Notify({Title = "‚ùå Erro", Content = "Personagem n√£o encontrado!", Duration = 3})
            teleportandoItem = false
            return
        end
        local posicaoOriginal = rootPart.CFrame
        local itemMaisProximo = nil
        local menorDistancia = math.huge
        
        -- Procura o item mais pr√≥ximo
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj.Name == itemNome then
                local itemPart = nil
                local itemPos = nil
                if obj:IsA("BasePart") then
                    itemPart = obj
                    itemPos = obj.Position
                elseif obj:IsA("Model") then
                    itemPart = obj.PrimaryPart or obj:FindFirstChildWhichIsA("BasePart")
                    if itemPart then itemPos = itemPart.Position end
                end
                if itemPos then
                    local distancia = (itemPos - rootPart.Position).Magnitude
                    if distancia < menorDistancia then
                        menorDistancia = distancia
                        itemMaisProximo = obj
                    end
                end
            end
        end
        
        if not itemMaisProximo then
            Rayfield:Notify({Title = "‚ùå Item n√£o encontrado", Content = itemNome.." n√£o foi encontrado no mapa!", Duration = 3})
            teleportandoItem = false
            return
        end
        
        local itemPart = nil
        if itemMaisProximo:IsA("BasePart") then
            itemPart = itemMaisProximo
        elseif itemMaisProximo:IsA("Model") then
            itemPart = itemMaisProximo.PrimaryPart or itemMaisProximo:FindFirstChildWhichIsA("BasePart")
        end
        if not itemPart then
            Rayfield:Notify({Title = "‚ùå Erro", Content = "N√£o foi poss√≠vel localizar a parte do item!", Duration = 3})
            teleportandoItem = false
            return
        end
        
        -- Teleporta para o item
        rootPart.CFrame = CFrame.new(itemPart.Position + Vector3.new(0,5,0))
        Rayfield:Notify({Title = "üöÄ Teleportado", Content = "Coletando "..itemNome.." ("..i.."/"..quantidade..")", Duration = 2})
        
        wait(0.5) -- delay antes de puxar

        -- Dispara o evento remoto do Coal
        local itemsFolder = workspace:WaitForChild("Items")
        if itemsFolder:FindFirstChild(itemNome) then
            local args = {itemsFolder:WaitForChild(itemNome)}
            ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("RequestStartDraggingItem"):FireServer(unpack(args))
        end
        
        wait(2) -- espera 2 segundos no item

        spawn(function()
            if itemMaisProximo.Parent then
                if itemMaisProximo:IsA("BasePart") then
                    itemMaisProximo.CFrame = CFrame.new(posicaoOriginal.Position + Vector3.new(0,3,0))
                elseif itemMaisProximo:IsA("Model") then
                    local p = itemMaisProximo.PrimaryPart or itemMaisProximo:FindFirstChildWhichIsA("BasePart")
                    if p then
                        itemMaisProximo:SetPrimaryPartCFrame(CFrame.new(posicaoOriginal.Position + Vector3.new(0,3,0)))
                    end
                end
            end
            wait(0.1)
            rootPart.CFrame = posicaoOriginal
            teleportandoItem = false
        end)
        
        wait(0.3)
    end
end

-- Aba Main
local AbaMain = Janela:CreateTab("Main")
AbaMain:CreateSection(".")
AbaMain:CreateToggle({
    Name = "Kill Aura",
    CurrentValue = false,
    Callback = function(value)
        killAuraAtivo = value
        if killAuraAtivo then
            ativarKillAura()
            Rayfield:Notify({Title = "‚úÖ Kill Aura", Content = "Ativo! Atacando NPCs com todas as ferramentas.", Duration = 3})
        else
            desativarKillAura()
            Rayfield:Notify({Title = "‚ùå Kill Aura", Content = "Desativado!", Duration = 3})
        end
    end
})
AbaMain:CreateSlider({
    Name = "Dist√¢ncia Kill Aura (studs)",
    Range = {1, 200},
    Increment = 1,
    Suffix = " studs",
    CurrentValue = distanciaKillAura,
    Callback = function(value)
        distanciaKillAura = value
        Rayfield:Notify({Title = "üìè Dist√¢ncia Atualizada", Content = "Kill Aura agora ataca at√© "..distanciaKillAura.." studs.", Duration = 2})
    end
})

-- Se√ß√£o Extra: Dropdown + Bot√£o + Quantidade
AbaMain:CreateSection("Extra")

local itemSelecionado = "Coal"
local quantidadeSelecionada = 1

-- Dropdown item
AbaMain:CreateDropdown({
    Name = "Escolher Item",
    Options = {"Coal"},
    CurrentOption = itemSelecionado,
    Callback = function(option)
        itemSelecionado = option
        Rayfield:Notify({Title = "üì¶ Item Selecionado", Content = "Voc√™ selecionou: "..option, Duration = 2})
    end
})

-- Slider quantidade
AbaMain:CreateSlider({
    Name = "Quantidade (1 a 10)",
    Range = {1,10},
    Increment = 1,
    Suffix = " itens",
    CurrentValue = quantidadeSelecionada,
    Callback = function(value)
        quantidadeSelecionada = value
        Rayfield:Notify({Title = "üìä Quantidade Selecionada", Content = "Vai puxar "..quantidadeSelecionada.." "..itemSelecionado.."(s).", Duration = 2})
    end
})

-- Bot√£o para coletar
AbaMain:CreateButton({
    Name = "Coletar Item",
    Callback = function()
        if itemSelecionado and not teleportandoItem then
            teleportarParaItem(itemSelecionado, quantidadeSelecionada)
        elseif teleportandoItem then
            Rayfield:Notify({Title = "‚ö†Ô∏è Aguarde", Content = "J√° estou coletando um item!", Duration = 2})
        else
            Rayfield:Notify({Title = "‚ö†Ô∏è Nenhum Item", Content = "Selecione um item primeiro!", Duration = 3})
        end
    end
})
